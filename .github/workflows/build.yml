name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip \
          autoconf libtool pkg-config zlib1g-dev libncurses-dev cmake \
          libffi-dev libssl-dev libncurses6 libtinfo6

    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer==1.5.0 cython==0.29.33 virtualenv

    - name: Clean previous builds
      run: |
        rm -rf .buildozer
        rm -rf ~/.gradle/caches/

    - name: Set up Android SDK
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg

        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        mkdir -p $ANDROID_SDK_ROOT
        unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT
        mv $ANDROID_SDK_ROOT/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools-latest
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        mv $ANDROID_SDK_ROOT/cmdline-tools-latest $ANDROID_SDK_ROOT/cmdline-tools/latest

        # Esponi sdkmanager e platform-tools
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    - name: Accept Android licenses
      run: |
        yes | sdkmanager --licenses

    - name: Install Android SDK components
      run: |
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "ndk;25.2.9519653"

    - name: Expose build-tools (aidl)
      run: |
        echo "$ANDROID_SDK_ROOT/build-tools/33.0.0" >> $GITHUB_PATH

    - name: Generate buildozer.spec if missing
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name: Build APK with Buildozer
      timeout-minutes: 45
      run: |
        export JAVA_OPTS="-Xmx4G -XX:+UseContainerSupport -XX:MaxRAMPercentage=80.0"
        export GRADLE_OPTS="-Xmx4G -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true"
        export _JAVA_OPTIONS="-Xmx4G"

        buildozer -v android debug > build.log 2>&1 || (cat build.log && exit 1)

        mkdir -p ar
        
