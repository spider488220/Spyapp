name: Build APK with Buildozer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04  # Using stable LTS version
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses-dev cmake libffi-dev libssl-dev
        sudo apt-get install -y libncurses6 libtinfo6

    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer==1.5.0 cython==0.29.33 virtualenv

    - name: Set up Android SDK
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        
        # Download command line tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        mkdir -p android-sdk
        unzip cmdline-tools.zip -d android-sdk
        mv android-sdk/cmdline-tools android-sdk/cmdline-tools-latest
        
        # Create proper directory structure
        mkdir -p android-sdk/cmdline-tools
        mv android-sdk/cmdline-tools-latest android-sdk/cmdline-tools/latest
        
        # Set environment variables
        echo "ANDROID_SDK_ROOT=$PWD/android-sdk" >> $GITHUB_ENV
        echo "$PWD/android-sdk/cmdline-tools/latest/bin:$PWD/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Accept Android licenses
      run: |
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install Android platforms and build tools
      run: |
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

    - name: Run Buildozer with increased resources
      timeout-minutes: 30  # Increase timeout
      run: |
        # Clean previous builds
        rm -rf .buildozer/android/platform/build-armeabi-v7a
        rm -rf .buildozer
        rm -rf ~/.gradle/caches/
        # Run with more memory awareness
        export JAVA_OPTS="-Xmx2048m"
        export GRADLE_OPTS="-Xmx2048m -Dorg.gradle.daemon=false"
        
        buildozer -v android debug 2>&1 | tee build.log
        grep -i error build.log && exit 1
        ls -la bin/

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: bin/*.apk
