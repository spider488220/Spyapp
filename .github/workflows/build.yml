name: Android APK Builder

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
  ANDROID_NDK_HOME: ${{ github.workspace }}/android-sdk/ndk/25.2.9519653
  PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:$PATH

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          git zip unzip openjdk-17-jdk \
          python3-pip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev cmake \
          libffi-dev libssl-dev

    - name: Configure environment
      run: |
        echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    - name: Install Python tools
      run: |
        python -m pip install --upgrade pip wheel
        pip install --no-cache-dir \
          buildozer==1.5.0 \
          cython==0.29.33 \
          virtualenv

    - name: Clean previous builds
      run: |
        rm -rf .buildozer
        rm -rf ~/.gradle/caches/

    - name: Setup Android SDK
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        mkdir -p android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip -d android-sdk/cmdline-tools-latest
        mv android-sdk/cmdline-tools-latest android-sdk/cmdline-tools/latest

    - name: Accept licenses
      run: |
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null

    - name: Install Android components
      run: |
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --verbose \
          "platform-tools" \
          "platforms;android-34" \
          "build-tools;34.0.0" \
          "ndk;25.2.9519653" \
          "cmake;3.22.1"

    - name: Verify installation
      run: |
        echo "=== Installed components ==="
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list_installed
        echo "=== Environment ==="
        echo "JAVA_HOME: $JAVA_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        echo "PATH: $PATH"
        which sdkmanager
        which adb
        which aapt

    - name: Initialize Buildozer
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
          echo "Created new buildozer.spec"
        fi
        
        # Apply required configuration
        sed -i.bak \
          -e "s/^android.minapi = .*/android.minapi = 21/" \
          -e "s/^android.sdk = .*/android.sdk = 34/" \
          -e "s/^android.ndk = .*/android.ndk = 25.2.9519653/" \
          -e "s/^android.accept_sdk_license = .*/android.accept_sdk_license = True/" \
          -e "s/^android.ndk_path = .*/android.ndk_path = $ANDROID_NDK_HOME/" \
          buildozer.spec

        echo "=== Buildozer Configuration ==="
        grep -E '^(android\.|requirements)' buildozer.spec

    - name: Build APK
      env:
        GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx4g -Dorg.gradle.parallel=true"
        _JAVA_OPTIONS: "-Xmx4g"
        P4A_RELEASE_KEYSTORE: ${{ secrets.KEYSTORE }}
        P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.KEYSTORE_PASS }}
        P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.KEY_PASS }}
      run: |
        set -o pipefail
        echo "Starting build..."
        
        # Run build with real-time logging
        buildozer -v android debug 2>&1 | tee build.log
        
        # Check result
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Build failed! Showing errors:"
          grep -iE 'error|fail|exception' build.log
          exit 1
        fi
        
        echo "Build successful!"
        ls -lh bin/*.apk

    - name: Upload build logs
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build.log
          .buildozer/android/platform/build-*/build/outputs/logs/
        retention-days: 7

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: generated-apk
        path: bin/*.apk
        retention-days: 30
